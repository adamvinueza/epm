(define (add-node n bst)
  (let ((v (get-root-value bst)))
    (if (null? v)
      (list n '() '())
      (if (< n v)
        (add-node n (get-left bst))
        (if (> n v)
          (add-node n (get-right bst))
          bst)))))

(define (get-left bst)
  (if (null? bst)
    '()
    (cadr bst)))

(define (get-right bst)
  (if (null? bst)
    '()
    (caddr bst)))

(define (get-root-value bst)
  (if (null? bst)
    '()
    (car bst)))
